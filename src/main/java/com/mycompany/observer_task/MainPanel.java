/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.observer_task;

import com.mycompany.practic.calculation.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JPanel;
import org.knowm.xchart.XYChart;

/**
 *
 * @author igore
 */
public class MainPanel extends javax.swing.JPanel implements Observer {
    final CalculationMakerInterface calculationMaker;
    final DataCollection data;
    final XYChart chart;
    final JPanel chartPanel;
    /**
     * Creates new form MainPanel
     */
    public MainPanel(XYChart chart, JPanel chartPanel ,List<Double> xData, List<Double> yData) {
        this.chart = chart;
        this.chartPanel = chartPanel;
        data = new DataCollection(xData, yData);
        data.addObserver(this);
        var calculationFactory = new CalculationFactory();
        calculationMaker = calculationFactory.CreateCalculationMaker();
        initComponents();
        
    }

    @Override
    public void update(Observable o, Object arg) {
        chart.updateXYSeries("y(x)", data.getxData(), data.getyData(), null);
        chartPanel.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vAdd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tAdd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        alphaAdd = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("V");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("T");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Alpha");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(vAdd)
                    .addComponent(tAdd)
                    .addComponent(alphaAdd)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(vAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alphaAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(addButton)
                .addContainerGap(87, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
       try{
           var v = Double.parseDouble(vAdd.getText());
           var t = Double.parseDouble(tAdd.getText());
           var alpha = Double.parseDouble(alphaAdd.getText());
           var res = calculationMaker.calculate(v, t, alpha);
           data.addData(res.getResultX(), res.getResultY());
       }
       catch(Exception e){}
    }//GEN-LAST:event_addButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField alphaAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField tAdd;
    private javax.swing.JTextField vAdd;
    // End of variables declaration//GEN-END:variables

static class DataCollection extends Observable {
        private List<Double> xData = new ArrayList<>();
        private List<Double> yData = new ArrayList<>();

        DataCollection(List<Double> xData, List<Double> yData){
            this.xData = xData;
            this.yData = yData;
        }
        
        public void addData(double x, double y) {
            xData.add(x);
            yData.add(y);
            setChanged();
            notifyObservers();
        }

        public void updateData(int index, double newValue) {
            yData.set(index, newValue);
            setChanged();
            notifyObservers();
        }

        public List<Double> getxData() {
            return xData;
        }

        public List<Double> getyData() {
            return yData;
        }
    }    
}
